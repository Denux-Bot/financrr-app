//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "currency")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: i32,
	#[sea_orm(column_type = "Text")]
	pub name: String,
	#[sea_orm(column_type = "Text")]
	pub symbol: String,
	#[sea_orm(column_type = "Text", unique)]
	pub iso_code: String,
	pub decimal_places: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::account::Entity")]
	Account,
	#[sea_orm(has_many = "super::transaction::Entity")]
	Transaction,
}

impl Related<super::account::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Account.def()
	}
}

impl Related<super::transaction::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Transaction.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
