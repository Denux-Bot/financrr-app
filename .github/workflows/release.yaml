name: Release

on:
  create:
    tags: [ '*' ]

concurrency:
  group: "release"
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io

jobs:
  push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        config:
          - { working_directory: './backend', dockerfile: './backend/docker/rust/Dockerfile', image_name: 'financrr/backend' }
          - { working_directory: './frontend', dockerfile: './frontend/docker/Dockerfile', image_name: 'financrr/frontend' }
    defaults:
      run:
        working-directory: ${{ matrix.config.working_directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.config.image_name }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.config.working_directory }}
          file: ${{ matrix.config.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.config.image_name }}:${{ github.event.ref }}
            ${{ env.REGISTRY }}/${{ matrix.config.image_name }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-binaries:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./backend  # Change the working directory to /backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build binaries
        run: |
          cargo build --release
          mv target/release/backend backend
          mv target/release/migration migration
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            ./backend
            ./migration

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
      - name: Parse CHANGELOG.md
        id: changelog
        run: |
          BODY=$(awk '/^## Version/{flag=1;next}/^## /{flag=0}flag' CHANGELOG.md)
          TITLE=$(echo "$BODY" | head -n 1)
          echo ::set-output name=body::"${BODY//$TITLE/}"
          echo ::set-output name=title::"$TITLE"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.title }}
          release_name: ${{ steps.changelog.outputs.title }}
          body: ${{ steps.changelog.outputs.body }}
          draft: false
          prerelease: false
      - name: Attach binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./backend
          asset_name: backend
          asset_content_type: application/octet-stream
      - name: Attach binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./migration
          asset_name: migration
          asset_content_type: application/octet-stream
